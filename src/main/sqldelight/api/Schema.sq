CREATE TABLE AuthenticatedPage(
    id TEXT PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    access_token TEXT NOT NULL
);

CREATE TABLE DiscordPage(
    channel_id TEXT NOT NULL,
    page_id TEXT NOT NULL REFERENCES AuthenticatedPage(id),
    PRIMARY KEY(channel_id, page_id)
);

CREATE TABLE MessagePost(
    message_id TEXT NOT NULL,
    post_id TEXT NOT NULL,
    PRIMARY KEY(message_id, post_id)
);
CREATE INDEX message_post_post_id_index ON MessagePost(post_id);

insertAuthenticatedPage:
INSERT OR REPLACE INTO AuthenticatedPage(id, name, access_token)
VALUES (?, ?, ?);

assignPageToDiscordChannel:
INSERT INTO DiscordPage(channel_id, page_id) VALUES (?, ?);

removePageToDiscordChannel:
DELETE FROM DiscordPage WHERE channel_id = ? AND page_id = ?;

assignMessageToPost:
INSERT INTO MessagePost(message_id, post_id) VALUES (?, ?);

selectAllPages:
SELECT * FROM AuthenticatedPage;

selectChannelsWithPages:
SELECT DiscordPage.channel_id AS channel_id, AuthenticatedPage.name AS page_name, AuthenticatedPage.id AS page_id, AuthenticatedPage.access_token AS page_access_token
FROM AuthenticatedPage JOIN DiscordPage ON AuthenticatedPage.id = DiscordPage.page_id;

selectMessagesWithPosts:
SELECT MessagePost.* FROM MessagePost;

selectMessagesForPost:
SELECT MessagePost.* FROM MessagePost WHERE post_id = ?;
